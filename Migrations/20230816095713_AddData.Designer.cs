// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Api_Project;

#nullable disable

namespace Web_Api_Project.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230816095713_AddData")]
    partial class AddData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web_Api_Project.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8029),
                            Email = "email@gmail.com",
                            Name = "TestAuthor 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8043),
                            Email = "author@gmail.com",
                            Name = "TestAuthor 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8045),
                            Email = "author3@gmail.com",
                            Name = "TestAuthor 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8046),
                            Email = "author4@gmail.com",
                            Name = "TestAuthor 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8048),
                            Email = "author5@gmail.com",
                            Name = "TestAuthor 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 8, 16, 15, 27, 12, 992, DateTimeKind.Local).AddTicks(8049),
                            Email = "author6@gmail.com",
                            Name = "TestAuthor 6"
                        });
                });

            modelBuilder.Entity("Web_Api_Project.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorID = 1,
                            Description = "TestBook Description",
                            Title = "TestBook"
                        },
                        new
                        {
                            Id = 2,
                            AuthorID = 2,
                            Description = "TestBook New Description",
                            Title = "TestBook New"
                        },
                        new
                        {
                            Id = 3,
                            AuthorID = 3,
                            Description = "TestBook New Description 3",
                            Title = "TestBook New"
                        },
                        new
                        {
                            Id = 4,
                            AuthorID = 3,
                            Description = "TestBook New Description 4",
                            Title = "TestBook New"
                        },
                        new
                        {
                            Id = 5,
                            AuthorID = 1,
                            Description = "TestBook New Description 5",
                            Title = "TestBook New"
                        },
                        new
                        {
                            Id = 6,
                            AuthorID = 2,
                            Description = "TestBook New Description 6",
                            Title = "TestBook New"
                        });
                });

            modelBuilder.Entity("Web_Api_Project.Models.Book", b =>
                {
                    b.HasOne("Web_Api_Project.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Web_Api_Project.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
